name: "[fake-gcs-server] Promote to Production"
on:
  workflow_dispatch:
    inputs:
      commit-sha:
        description: 'Commit SHA to deploy (if different from PR head)'
        required: false
        type: string
    
permissions:
  contents: read
  actions: read
  pull-requests: write  
  
env:
  BUCKET_NAME: fake-bucket
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  
jobs:
  preview:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set SHA
        run: echo "MAIN_SHA=${{ inputs.commit-sha }}" >> $GITHUB_ENV

      # Start fake GCS server
      - name: Setup fake GCS server
        uses: fsouza/fake-gcs-action@v0.4.1
        with:
          version: latest
          port: 4443
          log-level: info

      # Override GCS to use fake server BEFORE any authentication
      - name: Configure fake GCS
        run: |
          # Set environment variables to redirect GCS calls to fake server
          echo "STORAGE_EMULATOR_HOST=localhost:4443" >> $GITHUB_ENV
          echo "GOOGLE_CLOUD_PROJECT=fake-project" >> $GITHUB_ENV

      - name: Setup Buninator
        id: setup
        uses: ./.github/actions/setup-buninator
        with:
          main-sha: ${{ env.MAIN_SHA }}
          gcp-sa-key: '{"type": "service_account", "project_id": "fake"}' # Dummy credentials
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create test bucket
        run: |
          # Create the test bucket on fake GCS
          gsutil mb gs://${{ env.BUCKET_NAME }}/ || echo "Bucket already exists"

      - name: Verify Service Account Access
        run: |
          echo "Bucket access (using fake GCS):"
          gsutil ls gs://${{ env.BUCKET_NAME }}/ && echo "Bucket access verified"

      - name: Preview Changes
        run: buninator preview "${{ steps.setup.outputs.config-file }}"

  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs: preview
    environment: prod
    concurrency:
      group: prod
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set SHA
        run: echo "MAIN_SHA=${{ inputs.commit-sha }}" >> $GITHUB_ENV

      # Start fake GCS server
      - name: Setup fake GCS server
        uses: fsouza/fake-gcs-action@v0.4.1
        with:
          version: latest
          port: 4443
          log-level: info

      # Override GCS to use fake server BEFORE any authentication
      - name: Configure fake GCS
        run: |
          # Set environment variables to redirect GCS calls to fake server
          echo "STORAGE_EMULATOR_HOST=localhost:4443" >> $GITHUB_ENV
          echo "GOOGLE_CLOUD_PROJECT=fake-project" >> $GITHUB_ENV

      - name: Setup Buninator
        id: setup
        uses: ./.github/actions/setup-buninator
        with:
          main-sha: ${{ env.MAIN_SHA }}
          gcp-sa-key: '{"type": "service_account", "project_id": "fake"}' # Dummy credentials
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create test bucket
        run: |
          # Create the test bucket on fake GCS
          gsutil mb gs://${{ env.BUCKET_NAME }}/ || echo "Bucket already exists"

      - name: Deploy Configuration
        run: |
          CONFIG_FILE="${{ steps.setup.outputs.config-file }}"
          echo "ðŸš€ Deploying $CONFIG_FILE to gs://${{ env.BUCKET_NAME }}/$(basename $CONFIG_FILE) (fake GCS)"
          buninator deploy "$CONFIG_FILE"

      # - name: Generate Deployment Summary
      #   run: |
      #     CONFIG_FILE="${{ steps.setup.outputs.config-file }}"
      #     cat >> $GITHUB_STEP_SUMMARY << EOF
      #     # âœ… Deployment Successful (Fake GCS)
      #     **File:** \`$(basename $CONFIG_FILE)\`
      #     **Timestamp:** \`$(date -Iseconds)\`
      #     **Requester:** \`${{ github.actor }}\`
      #     **Workflow:** [\`${{ github.run_id }}\`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
      #     **Note:** Deployed to fake GCS server for testing
      #     EOF