name: "[fake-gcs-server] Promote to Production"
on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: "Commit SHA to deploy"
        required: true
        type: string

permissions:
  contents: read
  actions: read
  pull-requests: write  
  
env:
  BUCKET_NAME: fake-bucket
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  preview:
    name: Preview (manual)
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    outputs:
      config-file: ${{ steps.setup.outputs.config-file }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ inputs.commit_sha }}
          fetch-depth: 0

      - name: Setup Buninator
        id: setup
        uses: ./.github/actions/setup-buninator
        with:
          main-sha: ${{ inputs.commit_sha }}
          gcp-sa-key: ${{ secrets.GCP_SA_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Clear GCP authentication for fake GCS
        run: |
          # Clear GCP authentication so gsutil uses .boto file
          unset GOOGLE_APPLICATION_CREDENTIALS
          gcloud auth revoke --all || true

      - name: Start fake-gcs-server
        run: |
          docker run -d --rm --name fake-gcs \
            -p 4443:4443 \
            fsouza/fake-gcs-server:latest \
            -scheme http -port 4443
          
          # Wait for server to be ready with timeout
          echo "Waiting for fake-gcs-server to start..."
          for i in {1..30}; do
            if curl -sf http://localhost:4443/storage/v1/b >/dev/null 2>&1; then
              echo "fake-gcs-server is up and ready"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "fake-gcs-server failed to start within 15 seconds"
              docker logs fake-gcs
              exit 1
            fi
            sleep 0.5
          done

      - name: Configure gsutil for fake-gcs-server
        run: |
          cat > .boto << 'EOF'
          [Credentials]
          use_anonymous = True

          [GSUtil]
          prefer_api = json
          json_api_host = localhost
          json_api_port = 4443
          json_api_scheme = http
          EOF
          export BOTO_PATH="$PWD/.boto"
          echo "BOTO_PATH=$PWD/.boto" >> $GITHUB_ENV

      - name: Create bucket on fake-gcs-server
        run: |
          gsutil mb gs://${{ env.BUCKET_NAME }} || echo "Bucket may already exist"
          gsutil ls -L gs://${{ env.BUCKET_NAME }} || echo "Failed to list bucket"

      - name: Preview Changes
        run: buninator preview "${{ steps.setup.outputs.config-file }}"

      - name: Stop fake-gcs-server
        if: always()
        run: |
          docker stop fake-gcs 2>/dev/null || true
          docker rm fake-gcs 2>/dev/null || true

  deploy:
    name: Deploy to fake-gcs-server (manual)
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.commit_sha != '' }}
    runs-on: ubuntu-latest
    needs: preview
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ inputs.commit_sha }}
          fetch-depth: 0

      - name: Setup Buninator
        id: setup
        uses: ./.github/actions/setup-buninator
        with:
          main-sha: ${{ inputs.commit_sha }}
          gcp-sa-key: ${{ secrets.GCP_SA_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Clear GCP authentication for fake GCS
        run: |
          # Clear GCP authentication so gsutil uses .boto file
          unset GOOGLE_APPLICATION_CREDENTIALS
          gcloud auth revoke --all || true

      - name: Start fake-gcs-server
        run: |
          docker run -d --rm --name fake-gcs \
            -p 4443:4443 \
            fsouza/fake-gcs-server:latest \
            -scheme http -port 4443
          
          # Wait for server to be ready with timeout
          echo "Waiting for fake-gcs-server to start..."
          for i in {1..30}; do
            if curl -sf http://localhost:4443/storage/v1/b >/dev/null 2>&1; then
              echo "fake-gcs-server is up and ready"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "fake-gcs-server failed to start within 15 seconds"
              docker logs fake-gcs
              exit 1
            fi
            sleep 0.5
          done

      - name: Configure gsutil for fake-gcs-server
        run: |
          cat > .boto << 'EOF'
          [Credentials]
          use_anonymous = True

          [GSUtil]
          prefer_api = json
          json_api_host = localhost
          json_api_port = 4443
          json_api_scheme = http
          EOF
          export BOTO_PATH="$PWD/.boto"
          echo "BOTO_PATH=$PWD/.boto" >> $GITHUB_ENV

      - name: Create bucket on fake-gcs-server
        run: |
          gsutil mb gs://${{ env.BUCKET_NAME }} || echo "Bucket may already exist"
          gsutil ls -L gs://${{ env.BUCKET_NAME }} || echo "Failed to list bucket"

      - name: Deploy artifact using buninator to fake-gcs-server
        run: |
          echo "Deploying ${{ steps.setup.outputs.config-file }} to fake-gcs-server bucket ${{ env.BUCKET_NAME }}"
          buninator deploy "${{ steps.setup.outputs.config-file }}"
          echo "Listing deployed files:"
          gsutil ls -l gs://${{ env.BUCKET_NAME }}/

      - name: Generate Deployment Summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          # âœ… Fake Deployment Successful
          **File:** `$(basename "${{ steps.setup.outputs.config-file }}")`
          **Bucket:** `${{ env.BUCKET_NAME }}`
          **Commit:** `${{ inputs.commit_sha }}`
          **Timestamp:** `$(date -Iseconds)`
          **Requester:** `${{ github.actor }}`
          **Workflow:** [`${{ github.run_id }}`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          EOF

      - name: Stop fake-gcs-server
        if: always()
        run: |
          docker stop fake-gcs 2>/dev/null || true
          docker rm fake-gcs 2>/dev/null || true